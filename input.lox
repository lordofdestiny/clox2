var x = ["test text", [2, 3], 4];
print x;
print x[1];
x[2] = 3;
print x[2];
print x;

// exit(0);
//
// class X {
//     init() {
//         this.x = 0;
//     }
//     static A = X();
//     static getIncrement() {
//         print "Inc";
//         return || X.A.x += 1;
//     }
//
//     static getDecrement() {
//         return || X.A.x -= 1;
//     }
//
//     static Print() {
//         print X.A.x;
//     }
// }
//
// print X.A;
// print X.A.x;
// X.getIncrement()();
// print X.A.x;
// X.Print();
//
// exit(0);

// fun fib(n) {
//     if(n < 2) return n;
//     return fib(n-2) + fib(n-1);
// }
//
// class Fibo {
//     static calc(n) {
//         if( n < 2) return n;
//         return Fibo.calc(n-1) + Fibo.calc(n-2);
//     }
//     fib(n) {
//         if(n < 2) return n;
//         return this.fib(n-2) + this.fib(n-1);
//     }
// }
// var start = clock();
// var result = fib(N);
// var end = clock();
// print result;
// print end - start;
//
// var start = clock();
// var result = Fibo.calc(N);
// var end = clock();
// print result;
// print end - start;
//
// var start = clock();
// var result = Fibo().fib(N);
// var end = clock();
// print result;
// print end - start;



//for(var i = 0; i < 50000000; i = i+1) {
//    class Test {
//        get() { return i; }
//        set(string, value) {
//            setField(this, string, value);
//        }
//        static method() {
//            return || nil;
//        }
//    }
//    fun define() {
//        return i + 1 + 1;
//    }
//    ((i + 1 > 4) and false) != true;
//    define();
//    Test.method()();
//}